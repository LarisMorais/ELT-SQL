--create database Olist;
--importar dados via tarefas - importar dados - flat file source (arquivo csv)
select * from dbo.tb_cg_olist_customer
select * from dbo.tb_cg_olist_geolocation
select * from dbo.tb_cg_olist_order_items
select * from dbo.tb_cg_olist_order_payments
select * from dbo.tb_cg_olist_orders
select * from dbo.tb_cg_olist_products
select * from dbo.tb_cg_olist_sellers
select * from dbo.tb_cg_product_Category

--modelar dados para tabelas de produção
-- TABELA 01)
select top 10 * from dbo.tb_cg_olist_customer

CREATE TABLE TB_ACT_OLIST_CUSTOMER
(
CUSTOMER_ID NVARCHAR(150),
CUSTOMER_UNIQUE_ID NVARCHAR(150),
CUSTOMER_ZIP_CODE_PREFIX NVARCHAR(15),
CUSTOMER_CITY NVARCHAR(100),
CUSTOMER_STATE CHAR(2)
)
--VERIFICAR ORDEM DAS COLUNAS --  INSERIR NA TABELA PRODUÇÃO(ACT)
SELECT * FROM DBO.TB_ACT_OLIST_CUSTOMER  
INSERT INTO TB_ACT_OLIST_CUSTOMER SELECT * FROM TB_CG_OLIST_CUSTOMER

--DADOS CARREGADOS
SELECT * FROM DBO.TB_ACT_OLIST_CUSTOMER

-- TABELA 02)
select top 10 * from dbo.tb_cg_olist_geolocation

CREATE TABLE TB_ACT_OLIST_GEOLOCATION
(
GEOLOCATION_ZIP_CODE_PREFIX NVARCHAR(15),
GEOLOCATION_LAT NVARCHAR(100),
GEOLOCATION_LNG NVARCHAR(100),
GEOLOCATION_CITY NVARCHAR(100),
GEOLOCATION_STATE CHAR(2)
)
--VERIFICAR ORDEM DAS COLUNAS --  INSERIR NA TABELA PRODUÇÃO(ACT)
SELECT * FROM DBO.TB_ACT_OLIST_GEOLOCATION 
INSERT INTO TB_ACT_OLIST_GEOLOCATION SELECT * FROM tb_cg_olist_geolocation

--DADOS CARREGADOS
SELECT * FROM DBO.TB_ACT_OLIST_GEOLOCATION

-- TABELA 03)
select TOP 10 * from dbo.tb_cg_olist_order_items

CREATE TABLE TB_ACT_OLIST_ORDER_ITEMS
(
ORDER_ID NVARCHAR(150),
ORDER_ITEM_ID CHAR(2),
PRODUCT_ID NVARCHAR(150),
SELLER_ID NVARCHAR(150),
SHIPPING_LIMIT_DATE DATETIME,
PRICE FLOAT(13),
FREIGHT_VALUE FLOAT(13),
)
--VERIFICAR ORDEM DAS COLUNAS --  INSERIR NA TABELA PRODUÇÃO(ACT)
SELECT * FROM DBO.TB_ACT_OLIST_ORDER_ITEMS
INSERT INTO TB_ACT_OLIST_ORDER_ITEMS SELECT * FROM tb_cg_olist_order_items

--DADOS CARREGADOS
SELECT * FROM DBO.TB_ACT_OLIST_ORDER_ITEMS

--TRATANDO DATAS VAZIAS
UPDATE DBO.TB_ACT_OLIST_ORDER_ITEMS SET SHIPPING_LIMIT_DATE = NULL
WHERE SHIPPING_LIMIT_DATE = ''


-- TABELA 04)
select TOP 10 * from dbo.tb_cg_olist_order_payments

CREATE TABLE TB_ACT_OLIST_ORDER_PAYMENTS
(
ORDER_ID NVARCHAR(150),
PAYMENT_SEQUENTIAL CHAR(2),
PAYMENT_TYPE NVARCHAR(50),
PAYMENT_INSTALLMENTS NVARCHAR(10),
PAYMENT_VALUE FLOAT(13)
)
--VERIFICAR ORDEM DAS COLUNAS --  INSERIR NA TABELA PRODUÇÃO(ACT)
SELECT * FROM DBO.TB_ACT_OLIST_ORDER_PAYMENTS
INSERT INTO TB_ACT_OLIST_ORDER_PAYMENTS SELECT * FROM tb_cg_olist_order_payments

--DADOS CARREGADOS
SELECT * FROM DBO.TB_ACT_OLIST_ORDER_PAYMENTS

-- TABELA 05)
select TOP 10 * from dbo.tb_cg_olist_orders

CREATE TABLE TB_ACT_OLIST_ORDERS
(
ORDER_ID NVARCHAR(150),
CUSTOMER_ID NVARCHAR(150),
ORDER_STATUS NVARCHAR(50),
ORDER_PURCHASE_TIMESTAMP DATETIME,
ORDER_APPROVED_AT DATETIME,
ORDER_DELIVERED_CARRIER_DATE DATETIME,
ORDER_DELIVERED_CUSTOMER_DATE DATETIME,
ORDER_ESTIMATED_DELIVERY_DATE DATETIME
)
--VERIFICAR ORDEM DAS COLUNAS --  INSERIR NA TABELA PRODUÇÃO(ACT)
SELECT * FROM DBO.TB_ACT_OLIST_ORDERS
INSERT INTO TB_ACT_OLIST_ORDERS SELECT * FROM tb_cg_olist_orders

--DADOS CARREGADOS
SELECT * FROM DBO.TB_ACT_OLIST_ORDERS

--TRATANDO DATAS VAZIAS
UPDATE DBO.TB_ACT_OLIST_ORDERS SET ORDER_PURCHASE_TIMESTAMP = NULL
WHERE ORDER_PURCHASE_TIMESTAMP = ''
UPDATE DBO.TB_ACT_OLIST_ORDERS SET ORDER_APPROVED_AT = NULL
WHERE ORDER_APPROVED_AT = ''
UPDATE DBO.TB_ACT_OLIST_ORDERS SET ORDER_DELIVERED_CARRIER_DATE = NULL
WHERE ORDER_DELIVERED_CARRIER_DATE = ''
UPDATE DBO.TB_ACT_OLIST_ORDERS SET ORDER_DELIVERED_CUSTOMER_DATE = NULL
WHERE ORDER_DELIVERED_CUSTOMER_DATE = ''
UPDATE DBO.TB_ACT_OLIST_ORDERS SET ORDER_ESTIMATED_DELIVERY_DATE = NULL
WHERE ORDER_ESTIMATED_DELIVERY_DATE = ''



-- TABELA 06)
select TOP 10 * from dbo.tb_cg_olist_products

CREATE TABLE TB_ACT_OLIST_PRODUCTS
(
PRODUCT_ID NVARCHAR(150),
PRODUCT_CATEGORY_NAME NVARCHAR(100),
PRODUCT_NAME_LENGHT NVARCHAR(10),
PRODUCT_DESCRIPTION_LENGHT NVARCHAR(10),
PRODUCT_PHOTOS_QTY NVARCHAR(10),
PRODUCT_WEIGHT_G NVARCHAR(10),
PRODUCT_LENGHT_CM NVARCHAR(10),
PRODUCT_HEIGHT_CM NVARCHAR(10),
PRODUCT_WIDTH_CM NVARCHAR(10)
)
--VERIFICAR ORDEM DAS COLUNAS --  INSERIR NA TABELA PRODUÇÃO(ACT)
SELECT * FROM DBO.TB_ACT_OLIST_PRODUCTS
INSERT INTO TB_ACT_OLIST_PRODUCTS SELECT * FROM tb_cg_olist_products

--DADOS CARREGADOS
SELECT * FROM DBO.TB_ACT_OLIST_PRODUCTS


-- TABELA 07)
select TOP 10 * from dbo.tb_cg_olist_sellers

CREATE TABLE TB_ACT_OLIST_SELLERS
(
SELLER_ID NVARCHAR(150),
SELLER_ZIP_CODE_PREFIX NVARCHAR(100),
SELLER_CITY NVARCHAR(100),
SELLER_STATE CHAR(2)
)
--VERIFICAR ORDEM DAS COLUNAS --  INSERIR NA TABELA PRODUÇÃO(ACT)
SELECT * FROM DBO.TB_ACT_OLIST_SELLERS
INSERT INTO TB_ACT_OLIST_SELLERS SELECT * FROM tb_cg_olist_sellers

--DADOS CARREGADOS
SELECT * FROM DBO.TB_ACT_OLIST_SELLERS



-- TABELA 08)
select TOP 10 * from dbo.tb_cg_product_Category

CREATE TABLE TB_ACT_OLIST_PRODUCT_CATEGORY
(
PRODUCT_CATEGORY_NAME NVARCHAR(150),
PRODUCT_CATEGORY_NAME_ENGLISH NVARCHAR(150),
)
--VERIFICAR ORDEM DAS COLUNAS --  INSERIR NA TABELA PRODUÇÃO(ACT)
SELECT * FROM DBO.TB_ACT_OLIST_PRODUCT_CATEGORY
INSERT INTO TB_ACT_OLIST_PRODUCT_CATEGORY SELECT * FROM tb_cg_product_Category

--DADOS CARREGADOS
SELECT * FROM DBO.TB_ACT_OLIST_PRODUCT_CATEGORY



--TABELAS DADOS TRADADOS

select * from dbo.TB_ACT_OLIST_CUSTOMER
select * from dbo.TB_ACT_OLIST_GEOLOCATION
select * from dbo.TB_ACT_OLIST_ORDER_ITEMS
select * from dbo.TB_ACT_OLIST_ORDER_PAYMENTS
select * from dbo.TB_ACT_OLIST_ORDERS
select * from dbo.TB_ACT_OLIST_PRODUCTS
select * from dbo.TB_ACT_OLIST_SELLERS
select * from dbo.TB_ACT_OLIST_PRODUCT_CATEGORY

/*
ANALISES:
01 - Quais clientes fizeram pedido?
*/

--01)
CREATE VIEW VW_PEDIDOS_POR_CLIENTE
AS 
select a. *, b.CUSTOMER_CITY, b.CUSTOMER_STATE 
from dbo.TB_ACT_OLIST_ORDERS a
INNER JOIN dbo.TB_ACT_OLIST_CUSTOMER b ON (a.CUSTOMER_ID = b.CUSTOMER_ID)

select * from VW_PEDIDOS_POR_CLIENTE


